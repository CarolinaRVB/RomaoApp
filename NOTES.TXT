Requirements:
    - To convert UI file use: pyuic6 input.ui -o output.py

Change App aesthetics:
    -   (DONE) Create Sidebar menu: expandable:
            - (top) HOME, NEW, LOAD, DELETE, ERASE, SEE
            - (bottom) DOWNLOAD
    -  (DONE) Top menu: General Info Page | option do add pages:
        -  (DONE) Option to add meal pages: 3 types - simple, complex, main
    -  (DONE) App starts only with main window with just Logo


NEXT STEPS:
    - Handle remaining text lines of first page
    - Create pages UIs
    - Check if it's possible to rotate pages on tabWidget


PLAN LOADED - DELETED - INSERT PAGE - ERROR AUTOSAVE POPUP
    When new plan format arrives:
    - Create 3 page types as per plan page
    - Prepare input handling
    - Prepare database saving and loading of new widgets
    - Prepare Plan download and writing on pdf templates
    - Test

Plan for Download Option:
    - Change the app_window self.page_buttons_list variable to be a dictionary: each page that is added will have
    as a Key it's name and it's value will be the page type (1, 2, 3, etc) -> adapt the rest of the code to just check
    the keys of the dict
    - Then when Download is clicked:
        - The app will iterate the dict page_buttons_list by order, for each key accessed the function will determine
        what type of page it is and redirect the code to the corrresponding function handler:
            - Each page will have a set of fixed labels and text boxes with corresponding coordinates (on a dict?)
            - The app checks if they have content or not, if so, it will draw the content on the pdf template
            according to their positions: just gonna need starting X and Y, and max length and hight
        - Download function can be a Class? --> has a self.text_widgets and self.label_widgets?

Now:
    -

   - Setup Database:
        - Save Plans by ID
        - Create Database with fixed fields - general page - plus dynamic fields - added pages that can be of
        3 different types. Each time a page is added, when the user saves the plan the program adds the new page and
        corresponding data fields to the database
        We need to ensure that:

        - General data is stored when the user begins creating a new plan.
        - Dynamic page data is added to the database every time the user creates or modifies a page.
        - Each dynamic page is uniquely identifiable by the userID, the pageNumber, and the pageType.

        - !!! Find way to keep track of new pages added when it's time do save the plan !!!!
        - When the user adds a new page, we:

            - Increment a pageNumber counter (to track pages per user/plan).
            - Record the new page's metadata (userID, pageType, pageNumber) in the database.
            - Store widget values (e.g., inputs, checkboxes, etc.) from the UI.

   -

              Table General | Table Simple
userID
userName

